openapi: 3.0.0
info:
  title: Autobarn API
  description: |
    The Autobarn API, as used in Dylan Beattie's workshop
    [Introduction to Distributed Systems with .NET](https://urs.tl/dsnet).

    (Yep, your description can have multiple lines and contain Markdown! Cool!)
  version: 1.0.0
servers:
  - url: /api
paths:
  /models/{code}:
    get:
      tags:
        - Models
      summary: Get information about a vehicle model
      parameters:
        - in: path
          name: code
          schema:
            type: string
      responses:
        '200':    # status code
          description: A JSON document describing a vehicle model
          content:
            application/json:
              schema:
                type: object
                properties:
    post:
      consumes:
        - application/json
      parameters:
        - $ref: '#/components/parameters/code'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vehicle'
      responses:
        '201':
          description: A new vehicle was created
        '404':
          description: No such model code exists
        '409':
          description: That vehicle already exists.
  /vehicles:
    get:
      tags:
        - Vehicles
      summary: Returns a list of vehicles.
      description: Returns a list of all the vehicles available in the Autobarn database
      parameters:
        - in: query
          name: index
          schema:
            type: integer
          description: The zero-based index of the page you want.
      responses:
        '200':    # status code
          description: A JSON array of vehicle objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  _links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                      previous:
                        type: object
                        properties:
                          href:
                            type: string
                      next:
                        type: object
                        properties:
                          href:
                            type: string
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/vehicle' 
  /vehicles/{reg}:
    put:
      summary: Create or update a vehicle
      tags:
        - Vehicles
      consumes:
        - application/json
      parameters:
        - $ref: '#/components/parameters/reg'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vehicle'
      responses:
        200:
          description: OK.
        201:
          description: Created.
    get:
      tags:
        - Vehicles
      parameters:
        - $ref: '#/components/parameters/reg'
      responses:
        '404':
          description: There is no vehicle in the system matching that registration
        '200':    # status code
          description: A vehicle object
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/vehicle'

components:
  parameters:
    reg:
      name: reg
      in: path
      schema:
        type: string
      required: true
      description: The registration plate of the vehicle you want to get
    code:
      name: code
      in: path
      schema:
        type: string
      required: true
      description: The vehicle model code you want to use
  schemas:
    vehicle:
      type: object   # Data type
      properties: 
        registration:
          type: string
        modelCode:
          type: string
        color: 
          type: string
        year:
          type: integer
      example:
        registration: OUTATIME
        modelCode: dmc-delorean
        color: Silver
        year: 1985
